<?xml version="1.0" encoding="ASCII"?>

<!-- oks-schema version 2.2 -->


<!DOCTYPE oks-schema [
  <!ELEMENT oks-schema (info, (include)?, (comments)?, (class)+)>
  <!ELEMENT info EMPTY>
  <!ATTLIST info
      name CDATA #IMPLIED
      type CDATA #IMPLIED
      num-of-items CDATA #REQUIRED
      oks-format CDATA #FIXED "schema"
      oks-version CDATA #REQUIRED
      created-by CDATA #IMPLIED
      created-on CDATA #IMPLIED
      creation-time CDATA #IMPLIED
      last-modified-by CDATA #IMPLIED
      last-modified-on CDATA #IMPLIED
      last-modification-time CDATA #IMPLIED
  >
  <!ELEMENT include (file)+>
  <!ELEMENT file EMPTY>
  <!ATTLIST file
      path CDATA #REQUIRED
  >
  <!ELEMENT comments (comment)+>
  <!ELEMENT comment EMPTY>
  <!ATTLIST comment
      creation-time CDATA #REQUIRED
      created-by CDATA #REQUIRED
      created-on CDATA #REQUIRED
      author CDATA #REQUIRED
      text CDATA #REQUIRED
  >
  <!ELEMENT class (superclass | attribute | relationship | method)*>
  <!ATTLIST class
      name CDATA #REQUIRED
      description CDATA ""
      is-abstract (yes|no) "no"
  >
  <!ELEMENT superclass EMPTY>
  <!ATTLIST superclass name CDATA #REQUIRED>
  <!ELEMENT attribute EMPTY>
  <!ATTLIST attribute
      name CDATA #REQUIRED
      description CDATA ""
      type (bool|s8|u8|s16|u16|s32|u32|s64|u64|float|double|date|time|string|uid|enum|class) #REQUIRED
      range CDATA ""
      format (dec|hex|oct) "dec"
      is-multi-value (yes|no) "no"
      init-value CDATA ""
      is-not-null (yes|no) "no"
      ordered (yes|no) "no"
  >
  <!ELEMENT relationship EMPTY>
  <!ATTLIST relationship
      name CDATA #REQUIRED
      description CDATA ""
      class-type CDATA #REQUIRED
      low-cc (zero|one) #REQUIRED
      high-cc (one|many) #REQUIRED
      is-composite (yes|no) #REQUIRED
      is-exclusive (yes|no) #REQUIRED
      is-dependent (yes|no) #REQUIRED
      ordered (yes|no) "no"
  >
  <!ELEMENT method (method-implementation*)>
  <!ATTLIST method
      name CDATA #REQUIRED
      description CDATA ""
  >
  <!ELEMENT method-implementation EMPTY>
  <!ATTLIST method-implementation
      language CDATA #REQUIRED
      prototype CDATA #REQUIRED
      body CDATA ""
  >
]>

<oks-schema>

<info name="" type="" num-of-items="24" oks-format="schema" oks-version="862f2957270" created-by="jcfree" created-on="mu2edaq13.fnal.gov" creation-time="20230123T223700" last-modified-by="gjc" last-modified-on="thinkpad" last-modification-time="20230504T131551"/>

 <class name="Application" description="A software executable" is-abstract="yes">
  <superclass name="ResourceBase"/>
  <relationship name="ApplicationEnvironment" description="Define process environment for this application." class-type="Parameter" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="host" description="VirtualHost to run this application on" class-type="VirtualHost" low-cc="one" high-cc="one" is-composite="yes" is-exclusive="no" is-dependent="yes"/>
 </class>

 <class name="Component" description="Abstract base class for Segment and Resource classes. It is only used to allow objects of derived classes to be put into list of disabled items. For more information read https://twiki.cern.ch/twiki/bin/viewauth/Atlas/DaqHltDal#3_4_Resource_Classes" is-abstract="yes">
  <method name="get_parents" description="The algorithm calculates a vector of segments which are parents of given segment.&#xA;If the segment has parents referenced by the partition object, then:&#xA;- in case of C++ it fills the parents parameter; otherwise it throws {@link NotFoundException} exception">
   <method-implementation language="c++" prototype="void get_parents(const dunedaq::dal::Session&amp; session, std::list&lt; std::vector&lt;const dunedaq::dal::Component *&gt; &gt;&amp; parents) const" body=""/>
  </method>
  <method name="disabled" description="The algorithm checks if the segment / resource is disabled in the partition that uses it.&#xA;@param partition      partition object containing this resource or segment&#xA;">
   <method-implementation language="c++" prototype="bool disabled(const dunedaq::dal::Session&amp; session, bool skip_check = false) const" body=""/>
  </method>
  <method name="why_disabled" description="">
   <method-implementation language="java" prototype="String why_disabled(Partition partition, String prefix, boolean full_report) throws config.GenericException, config.SystemException, config.NotFoundException, config.NotValidException" body="return partition.resources().why_disabled(this, prefix, full_report);"/>
  </method>
 </class>

 <class name="Connection" is-abstract="yes">
  <attribute name="data_type" type="string" is-not-null="yes"/>
 </class>

 <class name="DaqApplication">
  <superclass name="Application"/>
  <attribute name="port" description="Port for REST configuration interface" type="u16" is-not-null="yes"/>
  <relationship name="modules" description="List of DAQ plugin modules" class-type="DaqModule" low-cc="one" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="yes"/>
  <method name="get_used_hostresources" description="Get the set of all HostResources used by this application">
   <method-implementation language="c++" prototype=" std::set&lt;const dunedaq::dal::HostResource*&gt; get_used_hostresources() const" body="std::set&lt;const dunedaq::dal::HostResource*&gt; res;&#xA;for (auto module :  get_modules()) {&#xA;  for (auto resource : module-&gt;get_used_resources()) {&#xA;    res.insert(resource);&#xA;  }&#xA;}&#xA;return res;&#xA;"/>
  </method>
 </class>

 <class name="DaqModule" description="A plugin module for the app framework">
  <superclass name="ResourceBase"/>
  <attribute name="plugin" description="Name of daq application plugin implementing this module" type="string" init-value="RandomListGenerator" is-not-null="yes"/>
  <relationship name="inputs" description="List of connections to/from this module" class-type="Connection" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="yes"/>
  <relationship name="outputs" description="Output connections from this module" class-type="Connection" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="yes"/>
  <relationship name="used_resources" class-type="HostResource" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="yes"/>
 </class>

 <class name="HostResource" is-abstract="yes">
  <attribute name="numa_id" type="u8" init-value="0" is-not-null="yes"/>
 </class>

 <class name="NetworkConnection">
  <superclass name="Connection"/>
  <attribute name="connection_type" description="Type of the network connection " type="enum" range="kSendRecv,kPubSub" init-value="kSendRecv" is-not-null="yes"/>
  <attribute name="protocol" description="Protocol of the connection tcp or udp" type="enum" range="tcp,udp" init-value="tcp" is-not-null="yes"/>
  <attribute name="port" type="u16" is-not-null="yes"/>
  <attribute name="uri" type="string" is-not-null="yes"/>
 </class>

 <class name="NetworkDevice">
  <superclass name="HostResource"/>
  <relationship name="network" description="Network interfaces attached to this host" class-type="NetworkInterface" low-cc="one" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="yes"/>
 </class>

 <class name="NetworkInterface">
  <attribute name="address" description="IP address in form a.b.c.d" type="string"/>
  <attribute name="networkMask" description="Network mask in for a.b.c.d" type="string" is-multi-value="yes"/>
  <attribute name="speed" description="Speed of network on this interface in Gb/s" type="u16" init-value="1" is-not-null="yes"/>
  <attribute name="interface" description="Name of interface e.g. eth0 or eno1" type="string"/>
  <attribute name="name" description="Name of network on this interface  Control or Data" type="enum" range="Control,Data" init-value="Control" is-not-null="yes"/>
 </class>

 <class name="NumaNode" description="Part of host associated with 1 NUM node">
  <attribute name="cpu_cores" description="List of CPU cores avalable on this NUMA node. Syntax may be comma separated list or range n..m or combination of both. If using a range the step can also be given by adding :s. For example 0..63:2 will select even numbered cores from 0 to 63" type="string" init-value="0..15" is-not-null="yes"/>
  <attribute name="resources" description="List of resources associated with this NUMA node" type="string" is-multi-value="yes"/>
  <attribute name="Description" description="Description of this NUMA node" type="string"/>
 </class>

 <class name="Parameter" description="This abstract class is used to describe a single variable (name:value pair) or a set of variables." is-abstract="yes">
  <attribute name="Description" description="Describes the purpose of the parameter." type="string"/>
 </class>

 <class name="ProcessingResource">
  <superclass name="HostResource"/>
  <attribute name="cpu_cores" type="u16" is-multi-value="yes" is-not-null="yes"/>
 </class>

 <class name="Queue">
  <superclass name="Connection"/>
  <attribute name="capacity" type="u32" init-value="10" is-not-null="yes"/>
  <attribute name="queue_type" description="Type of queue" type="enum" range="kUnknown,kStdDeQueue,kFollySPSCQueue,kFollyMPMCQueue" init-value="kFollySPSCQueue" is-not-null="yes"/>
 </class>

 <class name="RCApplication" description="An executable which allows users to control datataking">
  <superclass name="Application"/>
  <attribute name="Timeout" description="Seconds to wait before giving up on a transition" type="u16" range="1..3600" init-value="20" is-not-null="yes"/>
  <relationship name="ApplicationsControlled" description="Applications RC is in charge of" class-type="Application" low-cc="one" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="Resource">
  <superclass name="ResourceBase"/>
 </class>

 <class name="ResourceBase">
  <superclass name="Component"/>
  <method name="get_resources" description="Returns list of resources including defined by the nested sets. If partition parameter is provided (i.e. it is not &lt;b&gt;null&lt;/b&gt;), only enabled resources are added.">
   <method-implementation language="c++" prototype="void get_resources(oksdbinterfaces::Configuration&amp; db, std::list&lt;const Resource *&gt;&amp; out, const Session * p = 0) const" body=""/>
  </method>
 </class>

 <class name="ResourceSet">
  <superclass name="ResourceBase"/>
  <relationship name="Contains" description="A resource set is a container of resources to easily implement group operations (add/remove, enable/disable)." class-type="ResourceBase" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="ResourceSetAND" description="This resource set is considered disabled when ALL nested resources are disabled.">
  <superclass name="ResourceSet"/>
 </class>

 <class name="ResourceSetOR" description="This resource set is considered disabled when ANY nested resource is disabled.">
  <superclass name="ResourceSet"/>
 </class>

 <class name="Session">
  <attribute name="description" description="A description of the session." type="string"/>
  <attribute name="use_connectivity_server" description="If set publish and lookup connection information in the connectivity server. If not all information will be provided by the configuration database." type="bool" init-value="true" is-not-null="yes"/>
  <attribute name="connectivity_service_interval_ms" description="Interval between publishes and polls of connectivity service information" type="u32" init-value="2000" is-not-null="yes"/>
  <relationship name="applications" description="The list of applications to be started in this Session" class-type="Application" low-cc="one" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="yes"/>
  <relationship name="environment" description="Define process environment for any application run in given session." class-type="Parameter" low-cc="zero" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
  <relationship name="disabled" description="Resources that should not participate in the current run" class-type="ResourceBase" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="yes"/>
  <method name="set_disabled" description="In addition to persistently disabled components, dynamically disable these components. It will be taken into account by disabled() algorithm of Component class. This information is not committed to the database and will be overwritten by next set_disabled() call or erased by any config action (DB load, unload, reload).">
   <method-implementation language="c++" prototype="void set_disabled(const std::set&lt;const dunedaq::dal::Component *&gt;&amp; objs) const" body="BEGIN_PRIVATE_SECTION&#xA;friend class DisabledComponents;&#xA;friend class Component;&#xA;mutable dunedaq::dal::DisabledComponents m_disabled_components; &#xA;END_PRIVATE_SECTION&#xA;BEGIN_MEMBER_INITIALIZER_LIST&#xA;m_disabled_components(p_db)&#xA;END_MEMBER_INITIALIZER_LIST&#xA;BEGIN_HEADER_PROLOGUE&#xA;#include &quot;dunedaqdal/disabled-components.hpp&quot;&#xA;END_HEADER_PROLOGUE"/>
  </method>
  <method name="set_enabled" description="Dynamically enable these persistently disabled components. It will be taken into account by disabled() algorithm of the Component class. This information is not committed to the database and will be overwritten by next set_enabled() call or erased by any config action (DB load, unload, reload).">
   <method-implementation language="c++" prototype="void set_enabled(const std::set&lt;const dunedaq::dal::Component *&gt;&amp; objs) const" body=""/>
  </method>
 </class>

 <class name="StorageDevice">
  <superclass name="HostResource"/>
  <attribute name="storage" description="Amount of disk storage available for output data on this host in GB" type="u32" init-value="0" is-not-null="yes"/>
 </class>

 <class name="Variable" description="A Variable associates a value with string name. It is used for process environment and database strings substitution.">
  <superclass name="Parameter"/>
  <attribute name="Name" description="Name of the variable." type="string"/>
  <attribute name="Value" description="Default value of the variable. If TagValues is not empty, the value can be re-defined by corresponding tag in the context of the application&apos;s process environment." type="string"/>
 </class>

 <class name="VariableSet" description="Set of variables or variable sets. Names and values of all nested variables are added to value of relationship using resource set.">
  <superclass name="Parameter"/>
  <relationship name="Contains" description="List of included variables or variable sets." class-type="Parameter" low-cc="one" high-cc="many" is-composite="no" is-exclusive="no" is-dependent="no"/>
 </class>

 <class name="VirtualHost">
  <attribute name="physical_host_name" type="string" is-not-null="yes"/>
  <relationship name="hw_resources" description="Hardware resources required by this virtual host" class-type="HostResource" low-cc="zero" high-cc="many" is-composite="yes" is-exclusive="no" is-dependent="yes"/>
 </class>

</oks-schema>
